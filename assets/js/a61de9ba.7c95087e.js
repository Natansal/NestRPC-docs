"use strict";(self.webpackChunknestjs_rpc_docs=self.webpackChunknestjs_rpc_docs||[]).push([[352],{1774:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>d,contentTitle:()=>c,default:()=>h,frontMatter:()=>i,metadata:()=>t,toc:()=>a});const t=JSON.parse('{"id":"server/error-handling","title":"Error Handling (Server)","description":"Throw NestJS HttpExceptions inside routes; batching behavior","source":"@site/docs/server/error-handling.md","sourceDirName":"server","slug":"/server/error-handling","permalink":"/NestRPC-docs/docs/server/error-handling","draft":false,"unlisted":false,"editUrl":"https://github.com/Natansal/NestRPC-docs.git/docs/server/error-handling.md","tags":[],"version":"current","frontMatter":{"title":"Error Handling (Server)","description":"Throw NestJS HttpExceptions inside routes; batching behavior"},"sidebar":"tutorialSidebar","previous":{"title":"Nest Integration","permalink":"/NestRPC-docs/docs/server/nest-integration"},"next":{"title":"Client Overview","permalink":"/NestRPC-docs/docs/client/overview"}}');var s=n(4848),o=n(8453);const i={title:"Error Handling (Server)",description:"Throw NestJS HttpExceptions inside routes; batching behavior"},c=void 0,d={},a=[];function l(e){const r={code:"code",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(r.p,{children:["You can throw any NestJS ",(0,s.jsx)(r.code,{children:"HttpException"})," (e.g., ",(0,s.jsx)(r.code,{children:"BadRequestException"}),", ",(0,s.jsx)(r.code,{children:"UnauthorizedException"}),", ",(0,s.jsx)(r.code,{children:"NotFoundException"}),") directly from your ",(0,s.jsx)(r.code,{children:"@Route()"})," methods. The RPC controller normalizes these to RPC error items with the proper status code and message."]}),"\n",(0,s.jsx)(r.p,{children:"Example:"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-ts",children:"import { Router, Route } from '@nestjs-rpc/server';\nimport { BadRequestException, NotFoundException } from '@nestjs/common';\n\n@Router()\nexport class UserMutationsRouter {\n  @Route()\n  updateUser({ id, name }: { id: string; name: string }) {\n    if (!id) throw new BadRequestException('id is required');\n    const user = findUser(id);\n    if (!user) throw new NotFoundException('user not found');\n    return saveUser({ ...user, name });\n  }\n}\n"})}),"\n",(0,s.jsx)(r.p,{children:"Batch behavior:"}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsx)(r.li,{children:"Each call in a batch is executed independently; an error in one call does not cancel the others."}),"\n",(0,s.jsxs)(r.li,{children:["The server returns a ",(0,s.jsx)(r.code,{children:"BatchResponse[]"})," with per-call ",(0,s.jsx)(r.code,{children:"error"})," or ",(0,s.jsx)(r.code,{children:"response"}),"."]}),"\n",(0,s.jsx)(r.li,{children:"On the client, the specific call that failed will throw an error, while other calls in the same batch resolve normally."}),"\n"]})]})}function h(e={}){const{wrapper:r}={...(0,o.R)(),...e.components};return r?(0,s.jsx)(r,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},8453:(e,r,n)=>{n.d(r,{R:()=>i,x:()=>c});var t=n(6540);const s={},o=t.createContext(s);function i(e){const r=t.useContext(o);return t.useMemo(function(){return"function"==typeof e?e(r):{...r,...e}},[r,e])}function c(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),t.createElement(o.Provider,{value:r},e.children)}}}]);